# The following types define the data model of the example service
# based on which the GraphQL API is generated

type Tourney @model {
	id: ID! @isUnique
	name: String!
	createdAt: DateTime!
	courses: [Course!]! @relation(name: "TourneyCourses")
	golfers: [Golfer!]! @relation(name: "TourneyGolfers")
}

type Course @model {
	id: ID! @isUnique
	name: String
	holes: [Hole!]! @relation(name: "CourseHole")
	tourney: Tourney! @relation(name: "TourneyCourses")
}

type Golfer @model {
	id: ID! @isUnique
	name: String!
	tourney: Tourney! @relation(name: "TourneyGolfers")
	holes: [Hole!]! @relation(name: "GolferHoles")
}

type Hole @model {
	id: ID! @isUnique
	number: Int!
	course: Course! @relation(name: "CourseHole")
	golfer: Golfer! @relation(name: "GolferHoles")
	strokes: Int!
}
  # Uncomment below - you can declare relations between models like this

  # posts: [Post!]! @relation(name: "UserPosts")


# Uncomment the model below as well

# type Post @model {
#   id: ID! @isUnique
#   title: String!
#
#   # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
#   author: User! @relation(name: "UserPosts")
# }
